// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package bootstrap

import (
	"github.com/denisqq/xsolla-test/app/dao"
	"github.com/denisqq/xsolla-test/app/security"
	"github.com/denisqq/xsolla-test/app/service"
	"github.com/denisqq/xsolla-test/app/web/controller"
	"github.com/jinzhu/gorm"
)

import (
	_ "github.com/jinzhu/gorm/dialects/mysql"
)

// Injectors from wire.go:

func InitUserController(db *gorm.DB) controller.UserController {
	userRepository := dao.NewUserRepository(db)
	userService := service.NewUserService(userRepository)
	userController := controller.NewUserController(userService)
	return userController
}

func InitBasicAuth(db *gorm.DB) security.BasicAuth {
	userRepository := dao.NewUserRepository(db)
	basicAuthUserDetailsService := security.NewBasicAuthUserDetailsService(userRepository)
	authenticate := security.NewAuthenticate(basicAuthUserDetailsService)
	basicAuth := security.NewBasicAuth(authenticate)
	return basicAuth
}

func InitLinkController(db *gorm.DB) controller.LinkController {
	linkRepository := dao.NewLinkRepository(db)
	linkService := service.NewLinkService(linkRepository)
	userRepository := dao.NewUserRepository(db)
	userService := service.NewUserService(userRepository)
	linkController := controller.NewLinkController(linkService, userService)
	return linkController
}

func InitLinkHistoryService(db *gorm.DB) service.LinkHistoryService {
	linkHistoryRepository := dao.NewLinkHistoryRepository(db)
	linkRepository := dao.NewLinkRepository(db)
	linkService := service.NewLinkService(linkRepository)
	linkHistoryService := service.NewLinkHistoryService(linkHistoryRepository, linkService)
	return linkHistoryService
}

func InitStatController(db *gorm.DB) controller.StatController {
	statRepository := dao.NewStatRepository(db)
	statService := service.NewStatService(statRepository)
	statController := controller.NewStatController(statService)
	return statController
}
